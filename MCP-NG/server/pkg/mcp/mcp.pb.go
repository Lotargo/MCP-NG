// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: mcp.proto

package mcp

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListToolsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListToolsRequest) Reset() {
	*x = ListToolsRequest{}
	mi := &file_mcp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListToolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToolsRequest) ProtoMessage() {}

func (x *ListToolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToolsRequest.ProtoReflect.Descriptor instead.
func (*ListToolsRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{0}
}

type ListToolsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tools         []*ToolDescription     `protobuf:"bytes,1,rep,name=tools,proto3" json:"tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListToolsResponse) Reset() {
	*x = ListToolsResponse{}
	mi := &file_mcp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListToolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToolsResponse) ProtoMessage() {}

func (x *ListToolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToolsResponse.ProtoReflect.Descriptor instead.
func (*ListToolsResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{1}
}

func (x *ListToolsResponse) GetTools() []*ToolDescription {
	if x != nil {
		return x.Tools
	}
	return nil
}

type GetDescriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDescriptionRequest) Reset() {
	*x = GetDescriptionRequest{}
	mi := &file_mcp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDescriptionRequest) ProtoMessage() {}

func (x *GetDescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDescriptionRequest.ProtoReflect.Descriptor instead.
func (*GetDescriptionRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{2}
}

type ToolDescription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Parameters    *ToolParameters        `protobuf:"bytes,3,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolDescription) Reset() {
	*x = ToolDescription{}
	mi := &file_mcp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolDescription) ProtoMessage() {}

func (x *ToolDescription) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolDescription.ProtoReflect.Descriptor instead.
func (*ToolDescription) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{3}
}

func (x *ToolDescription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ToolDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ToolDescription) GetParameters() *ToolParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type ToolParameters struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Type          string                    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Typically "object"
	Properties    map[string]*ToolParameter `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Required      []string                  `protobuf:"bytes,3,rep,name=required,proto3" json:"required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolParameters) Reset() {
	*x = ToolParameters{}
	mi := &file_mcp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolParameters) ProtoMessage() {}

func (x *ToolParameters) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolParameters.ProtoReflect.Descriptor instead.
func (*ToolParameters) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{4}
}

func (x *ToolParameters) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ToolParameters) GetProperties() map[string]*ToolParameter {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ToolParameters) GetRequired() []string {
	if x != nil {
		return x.Required
	}
	return nil
}

type ToolParameter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // JSON schema types: "string", "number", etc.
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolParameter) Reset() {
	*x = ToolParameter{}
	mi := &file_mcp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolParameter) ProtoMessage() {}

func (x *ToolParameter) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolParameter.ProtoReflect.Descriptor instead.
func (*ToolParameter) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{5}
}

func (x *ToolParameter) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ToolParameter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Internal request from MCP to a specific Tool.
type ToolRunRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Arguments     *structpb.Struct       `protobuf:"bytes,2,opt,name=arguments,proto3" json:"arguments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolRunRequest) Reset() {
	*x = ToolRunRequest{}
	mi := &file_mcp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolRunRequest) ProtoMessage() {}

func (x *ToolRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolRunRequest.ProtoReflect.Descriptor instead.
func (*ToolRunRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{6}
}

func (x *ToolRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ToolRunRequest) GetArguments() *structpb.Struct {
	if x != nil {
		return x.Arguments
	}
	return nil
}

// Internal response from a specific Tool to MCP.
type ToolRunResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *structpb.Value        `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolRunResponse) Reset() {
	*x = ToolRunResponse{}
	mi := &file_mcp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolRunResponse) ProtoMessage() {}

func (x *ToolRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolRunResponse.ProtoReflect.Descriptor instead.
func (*ToolRunResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{7}
}

func (x *ToolRunResponse) GetResult() *structpb.Value {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ToolRunResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request from an external client to the MCP to execute a tool.
type ExecuteToolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ToolName      string                 `protobuf:"bytes,2,opt,name=tool_name,json=toolName,proto3" json:"tool_name,omitempty"`
	Arguments     *structpb.Struct       `protobuf:"bytes,3,opt,name=arguments,proto3" json:"arguments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteToolRequest) Reset() {
	*x = ExecuteToolRequest{}
	mi := &file_mcp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteToolRequest) ProtoMessage() {}

func (x *ExecuteToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteToolRequest.ProtoReflect.Descriptor instead.
func (*ExecuteToolRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{8}
}

func (x *ExecuteToolRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ExecuteToolRequest) GetToolName() string {
	if x != nil {
		return x.ToolName
	}
	return ""
}

func (x *ExecuteToolRequest) GetArguments() *structpb.Struct {
	if x != nil {
		return x.Arguments
	}
	return nil
}

// Response from the MCP to an external client after executing a tool.
type ExecuteToolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Result        *structpb.Struct       `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteToolResponse) Reset() {
	*x = ExecuteToolResponse{}
	mi := &file_mcp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteToolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteToolResponse) ProtoMessage() {}

func (x *ExecuteToolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteToolResponse.ProtoReflect.Descriptor instead.
func (*ExecuteToolResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{9}
}

func (x *ExecuteToolResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ExecuteToolResponse) GetResult() *structpb.Struct {
	if x != nil {
		return x.Result
	}
	return nil
}

type ProvideHumanInputRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Response      *structpb.Value        `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProvideHumanInputRequest) Reset() {
	*x = ProvideHumanInputRequest{}
	mi := &file_mcp_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvideHumanInputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideHumanInputRequest) ProtoMessage() {}

func (x *ProvideHumanInputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideHumanInputRequest.ProtoReflect.Descriptor instead.
func (*ProvideHumanInputRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{10}
}

func (x *ProvideHumanInputRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ProvideHumanInputRequest) GetResponse() *structpb.Value {
	if x != nil {
		return x.Response
	}
	return nil
}

type ProvideHumanInputResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // e.g., "received"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProvideHumanInputResponse) Reset() {
	*x = ProvideHumanInputResponse{}
	mi := &file_mcp_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvideHumanInputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideHumanInputResponse) ProtoMessage() {}

func (x *ProvideHumanInputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideHumanInputResponse.ProtoReflect.Descriptor instead.
func (*ProvideHumanInputResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{11}
}

func (x *ProvideHumanInputResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetHumanInputRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHumanInputRequest) Reset() {
	*x = GetHumanInputRequest{}
	mi := &file_mcp_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHumanInputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHumanInputRequest) ProtoMessage() {}

func (x *GetHumanInputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHumanInputRequest.ProtoReflect.Descriptor instead.
func (*GetHumanInputRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{12}
}

func (x *GetHumanInputRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetHumanInputResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // e.g., "pending", "completed"
	Response      *structpb.Value        `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHumanInputResponse) Reset() {
	*x = GetHumanInputResponse{}
	mi := &file_mcp_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHumanInputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHumanInputResponse) ProtoMessage() {}

func (x *GetHumanInputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHumanInputResponse.ProtoReflect.Descriptor instead.
func (*GetHumanInputResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{13}
}

func (x *GetHumanInputResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetHumanInputResponse) GetResponse() *structpb.Value {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_mcp_proto protoreflect.FileDescriptor

const file_mcp_proto_rawDesc = "" +
	"\n" +
	"\tmcp.proto\x12\x03mcp\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1cgoogle/api/annotations.proto\"\x12\n" +
	"\x10ListToolsRequest\"?\n" +
	"\x11ListToolsResponse\x12*\n" +
	"\x05tools\x18\x01 \x03(\v2\x14.mcp.ToolDescriptionR\x05tools\"\x17\n" +
	"\x15GetDescriptionRequest\"|\n" +
	"\x0fToolDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x123\n" +
	"\n" +
	"parameters\x18\x03 \x01(\v2\x13.mcp.ToolParametersR\n" +
	"parameters\"\xd8\x01\n" +
	"\x0eToolParameters\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12C\n" +
	"\n" +
	"properties\x18\x02 \x03(\v2#.mcp.ToolParameters.PropertiesEntryR\n" +
	"properties\x12\x1a\n" +
	"\brequired\x18\x03 \x03(\tR\brequired\x1aQ\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.mcp.ToolParameterR\x05value:\x028\x01\"E\n" +
	"\rToolParameter\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"[\n" +
	"\x0eToolRunRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x125\n" +
	"\targuments\x18\x02 \x01(\v2\x17.google.protobuf.StructR\targuments\"W\n" +
	"\x0fToolRunResponse\x12.\n" +
	"\x06result\x18\x01 \x01(\v2\x16.google.protobuf.ValueR\x06result\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x81\x01\n" +
	"\x12ExecuteToolRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttool_name\x18\x02 \x01(\tR\btoolName\x125\n" +
	"\targuments\x18\x03 \x01(\v2\x17.google.protobuf.StructR\targuments\"_\n" +
	"\x13ExecuteToolResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06result\"g\n" +
	"\x18ProvideHumanInputRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x122\n" +
	"\bresponse\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\bresponse\"3\n" +
	"\x19ProvideHumanInputResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"/\n" +
	"\x14GetHumanInputRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"c\n" +
	"\x15GetHumanInputResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x122\n" +
	"\bresponse\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\bresponse2\x97\x03\n" +
	"\x03MCP\x12M\n" +
	"\tListTools\x12\x15.mcp.ListToolsRequest\x1a\x16.mcp.ListToolsResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/tools\x12^\n" +
	"\vExecuteTool\x12\x17.mcp.ExecuteToolRequest\x1a\x18.mcp.ExecuteToolResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/tools:execute\x12v\n" +
	"\x11ProvideHumanInput\x12\x1d.mcp.ProvideHumanInputRequest\x1a\x1e.mcp.ProvideHumanInputResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/human-input:provide\x12i\n" +
	"\rGetHumanInput\x12\x19.mcp.GetHumanInputRequest\x1a\x1a.mcp.GetHumanInputResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/human-input/{task_id}2|\n" +
	"\x04Tool\x12B\n" +
	"\x0eGetDescription\x12\x1a.mcp.GetDescriptionRequest\x1a\x14.mcp.ToolDescription\x120\n" +
	"\x03Run\x12\x13.mcp.ToolRunRequest\x1a\x14.mcp.ToolRunResponseB\x17Z\x15mcp-ng/server/pkg/mcpb\x06proto3"

var (
	file_mcp_proto_rawDescOnce sync.Once
	file_mcp_proto_rawDescData []byte
)

func file_mcp_proto_rawDescGZIP() []byte {
	file_mcp_proto_rawDescOnce.Do(func() {
		file_mcp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcp_proto_rawDesc), len(file_mcp_proto_rawDesc)))
	})
	return file_mcp_proto_rawDescData
}

var file_mcp_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_mcp_proto_goTypes = []any{
	(*ListToolsRequest)(nil),          // 0: mcp.ListToolsRequest
	(*ListToolsResponse)(nil),         // 1: mcp.ListToolsResponse
	(*GetDescriptionRequest)(nil),     // 2: mcp.GetDescriptionRequest
	(*ToolDescription)(nil),           // 3: mcp.ToolDescription
	(*ToolParameters)(nil),            // 4: mcp.ToolParameters
	(*ToolParameter)(nil),             // 5: mcp.ToolParameter
	(*ToolRunRequest)(nil),            // 6: mcp.ToolRunRequest
	(*ToolRunResponse)(nil),           // 7: mcp.ToolRunResponse
	(*ExecuteToolRequest)(nil),        // 8: mcp.ExecuteToolRequest
	(*ExecuteToolResponse)(nil),       // 9: mcp.ExecuteToolResponse
	(*ProvideHumanInputRequest)(nil),  // 10: mcp.ProvideHumanInputRequest
	(*ProvideHumanInputResponse)(nil), // 11: mcp.ProvideHumanInputResponse
	(*GetHumanInputRequest)(nil),      // 12: mcp.GetHumanInputRequest
	(*GetHumanInputResponse)(nil),     // 13: mcp.GetHumanInputResponse
	nil,                               // 14: mcp.ToolParameters.PropertiesEntry
	(*structpb.Struct)(nil),           // 15: google.protobuf.Struct
	(*structpb.Value)(nil),            // 16: google.protobuf.Value
}
var file_mcp_proto_depIdxs = []int32{
	3,  // 0: mcp.ListToolsResponse.tools:type_name -> mcp.ToolDescription
	4,  // 1: mcp.ToolDescription.parameters:type_name -> mcp.ToolParameters
	14, // 2: mcp.ToolParameters.properties:type_name -> mcp.ToolParameters.PropertiesEntry
	15, // 3: mcp.ToolRunRequest.arguments:type_name -> google.protobuf.Struct
	16, // 4: mcp.ToolRunResponse.result:type_name -> google.protobuf.Value
	15, // 5: mcp.ExecuteToolRequest.arguments:type_name -> google.protobuf.Struct
	15, // 6: mcp.ExecuteToolResponse.result:type_name -> google.protobuf.Struct
	16, // 7: mcp.ProvideHumanInputRequest.response:type_name -> google.protobuf.Value
	16, // 8: mcp.GetHumanInputResponse.response:type_name -> google.protobuf.Value
	5,  // 9: mcp.ToolParameters.PropertiesEntry.value:type_name -> mcp.ToolParameter
	0,  // 10: mcp.MCP.ListTools:input_type -> mcp.ListToolsRequest
	8,  // 11: mcp.MCP.ExecuteTool:input_type -> mcp.ExecuteToolRequest
	10, // 12: mcp.MCP.ProvideHumanInput:input_type -> mcp.ProvideHumanInputRequest
	12, // 13: mcp.MCP.GetHumanInput:input_type -> mcp.GetHumanInputRequest
	2,  // 14: mcp.Tool.GetDescription:input_type -> mcp.GetDescriptionRequest
	6,  // 15: mcp.Tool.Run:input_type -> mcp.ToolRunRequest
	1,  // 16: mcp.MCP.ListTools:output_type -> mcp.ListToolsResponse
	9,  // 17: mcp.MCP.ExecuteTool:output_type -> mcp.ExecuteToolResponse
	11, // 18: mcp.MCP.ProvideHumanInput:output_type -> mcp.ProvideHumanInputResponse
	13, // 19: mcp.MCP.GetHumanInput:output_type -> mcp.GetHumanInputResponse
	3,  // 20: mcp.Tool.GetDescription:output_type -> mcp.ToolDescription
	7,  // 21: mcp.Tool.Run:output_type -> mcp.ToolRunResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_mcp_proto_init() }
func file_mcp_proto_init() {
	if File_mcp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcp_proto_rawDesc), len(file_mcp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_mcp_proto_goTypes,
		DependencyIndexes: file_mcp_proto_depIdxs,
		MessageInfos:      file_mcp_proto_msgTypes,
	}.Build()
	File_mcp_proto = out.File
	file_mcp_proto_goTypes = nil
	file_mcp_proto_depIdxs = nil
}
